[{"path":"https://wyaravms.github.io/genrs/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 2, June 1991Copyright © 1989, 1991 Free Software Foundation, Inc.,51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://wyaravms.github.io/genrs/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"licenses software designed take away freedom share change . contrast, GNU General Public License intended guarantee freedom share change free software–make sure software free users. General Public License applies Free Software Foundation’s software program whose authors commit using . (Free Software Foundation software covered GNU Lesser General Public License instead.) can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge service wish), receive source code can get want , can change software use pieces new free programs; know can things. protect rights, need make restrictions forbid anyone deny rights ask surrender rights. restrictions translate certain responsibilities distribute copies software, modify . example, distribute copies program, whether gratis fee, must give recipients rights . must make sure , , receive can get source code. must show terms know rights. protect rights two steps: (1) copyright software, (2) offer license gives legal permission copy, distribute /modify software. Also, author’s protection , want make certain everyone understands warranty free software. software modified someone else passed , want recipients know original, problems introduced others reflect original authors’ reputations. Finally, free program threatened constantly software patents. wish avoid danger redistributors free program individually obtain patent licenses, effect making program proprietary. prevent , made clear patent must licensed everyone’s free use licensed . precise terms conditions copying, distribution modification follow.","code":""},{"path":"https://wyaravms.github.io/genrs/LICENSE.html","id":"terms-and-conditions-for-copying-distribution-and-modification","dir":"","previous_headings":"","what":"TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION","title":"GNU General Public License","text":"0. License applies program work contains notice placed copyright holder saying may distributed terms General Public License. “Program”, , refers program work, “work based Program” means either Program derivative work copyright law: say, work containing Program portion , either verbatim modifications /translated another language. (Hereinafter, translation included without limitation term “modification”.) licensee addressed “”. Activities copying, distribution modification covered License; outside scope. act running Program restricted, output Program covered contents constitute work based Program (independent made running Program). Whether true depends Program . 1. may copy distribute verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice disclaimer warranty; keep intact notices refer License absence warranty; give recipients Program copy License along Program. may charge fee physical act transferring copy, may option offer warranty protection exchange fee. 2. may modify copy copies Program portion , thus forming work based Program, copy distribute modifications work terms Section 1 , provided also meet conditions: ) must cause modified files carry prominent notices stating changed files date change. b) must cause work distribute publish, whole part contains derived Program part thereof, licensed whole charge third parties terms License. c) modified program normally reads commands interactively run, must cause , started running interactive use ordinary way, print display announcement including appropriate copyright notice notice warranty (else, saying provide warranty) users may redistribute program conditions, telling user view copy License. (Exception: Program interactive normally print announcement, work based Program required print announcement.) requirements apply modified work whole. identifiable sections work derived Program, can reasonably considered independent separate works , License, terms, apply sections distribute separate works. distribute sections part whole work based Program, distribution whole must terms License, whose permissions licensees extend entire whole, thus every part regardless wrote . Thus, intent section claim rights contest rights work written entirely ; rather, intent exercise right control distribution derivative collective works based Program. addition, mere aggregation another work based Program Program (work based Program) volume storage distribution medium bring work scope License. 3. may copy distribute Program (work based , Section 2) object code executable form terms Sections 1 2 provided also one following: ) Accompany complete corresponding machine-readable source code, must distributed terms Sections 1 2 medium customarily used software interchange; , b) Accompany written offer, valid least three years, give third party, charge cost physically performing source distribution, complete machine-readable copy corresponding source code, distributed terms Sections 1 2 medium customarily used software interchange; , c) Accompany information received offer distribute corresponding source code. (alternative allowed noncommercial distribution received program object code executable form offer, accord Subsection b .) source code work means preferred form work making modifications . executable work, complete source code means source code modules contains, plus associated interface definition files, plus scripts used control compilation installation executable. However, special exception, source code distributed need include anything normally distributed (either source binary form) major components (compiler, kernel, ) operating system executable runs, unless component accompanies executable. distribution executable object code made offering access copy designated place, offering equivalent access copy source code place counts distribution source code, even though third parties compelled copy source along object code. 4. may copy, modify, sublicense, distribute Program except expressly provided License. attempt otherwise copy, modify, sublicense distribute Program void, automatically terminate rights License. However, parties received copies, rights, License licenses terminated long parties remain full compliance. 5. required accept License, since signed . However, nothing else grants permission modify distribute Program derivative works. actions prohibited law accept License. Therefore, modifying distributing Program (work based Program), indicate acceptance License , terms conditions copying, distributing modifying Program works based . 6. time redistribute Program (work based Program), recipient automatically receives license original licensor copy, distribute modify Program subject terms conditions. may impose restrictions recipients’ exercise rights granted herein. responsible enforcing compliance third parties License. 7. , consequence court judgment allegation patent infringement reason (limited patent issues), conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. distribute satisfy simultaneously obligations License pertinent obligations, consequence may distribute Program . example, patent license permit royalty-free redistribution Program receive copies directly indirectly , way satisfy License refrain entirely distribution Program. portion section held invalid unenforceable particular circumstance, balance section intended apply section whole intended apply circumstances. purpose section induce infringe patents property right claims contest validity claims; section sole purpose protecting integrity free software distribution system, implemented public license practices. Many people made generous contributions wide range software distributed system reliance consistent application system; author/donor decide willing distribute software system licensee impose choice. section intended make thoroughly clear believed consequence rest License. 8. distribution /use Program restricted certain countries either patents copyrighted interfaces, original copyright holder places Program License may add explicit geographical distribution limitation excluding countries, distribution permitted among countries thus excluded. case, License incorporates limitation written body License. 9. Free Software Foundation may publish revised /new versions General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies version number License applies “later version”, option following terms conditions either version later version published Free Software Foundation. Program specify version number License, may choose version ever published Free Software Foundation. 10. wish incorporate parts Program free programs whose distribution conditions different, write author ask permission. software copyrighted Free Software Foundation, write Free Software Foundation; sometimes make exceptions . decision guided two goals preserving free status derivatives free software promoting sharing reuse software generally.","code":""},{"path":"https://wyaravms.github.io/genrs/LICENSE.html","id":"no-warranty","dir":"","previous_headings":"","what":"NO WARRANTY","title":"GNU General Public License","text":"11. PROGRAM LICENSED FREE CHARGE, WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION. 12. EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MAY MODIFY /REDISTRIBUTE PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES. END TERMS CONDITIONS","code":""},{"path":"https://wyaravms.github.io/genrs/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively convey exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program interactive, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, commands use may called something show w show c; even mouse-clicks menu items–whatever suits program. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. sample; alter names: General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. Gnomovision version 69, Copyright (C) year name of author Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details. Yoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovision' (which makes passes at compilers) written by James Hacker.  <signature of Ty Coon>, 1 April 1989 Ty Coon, President of Vice"},{"path":"https://wyaravms.github.io/genrs/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Wyara Vanesa Moura e Silva. Author, maintainer.","code":""},{"path":"https://wyaravms.github.io/genrs/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Moura e Silva W (2024). genrs: Generates Random Samples Probability Distributions. R package version 0.2.0, https://wyaravms.github.io/genrs/, https://github.com/wyaravms/genrs.","code":"@Manual{,   title = {genrs: Generates Random Samples from Probability Distributions},   author = {Wyara Vanesa {Moura e Silva}},   year = {2024},   note = {R package version 0.2.0, https://wyaravms.github.io/genrs/},   url = {https://github.com/wyaravms/genrs}, }"},{"path":"https://wyaravms.github.io/genrs/index.html","id":"package-genrs-","dir":"","previous_headings":"","what":"Generates Random Samples from Probability Distributions","title":"Generates Random Samples from Probability Distributions","text":"Important Note: package just example used study create package add elements documentation. Functions enable generation random samples various distribution functions. method used generate values implemented using Inverse Transform Sampling method.","code":""},{"path":"https://wyaravms.github.io/genrs/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Generates Random Samples from Probability Distributions","text":"can install development version genrs GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"wyaravms/genrs\")"},{"path":"https://wyaravms.github.io/genrs/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Generates Random Samples from Probability Distributions","text":"basic examples using functions available genrs package: Function rburrxii generates random data following Burr XII distribution parameters shape1 shape2.  Function rparetoi generates random data following Pareto distribution parameters scale shape.  Function rloglogis generates random data following Log-logistic distribution parameters scale shape.","code":"library(genrs) rburrxii(10, 2, 3) #>  [1] 1.0974049 0.5779157 0.8709173 0.8513088 0.9375570 0.3340798 0.4065357 #>  [8] 0.7174570 0.5065897 2.2397891 hist(rburrxii(1000, 2, 4), freq = FALSE, main = \"Histogram of the Sample\") rparetoi(10, 3, 6) #>  [1] 3.331366 3.416477 4.395513 3.746907 3.246530 3.404517 3.311258 4.145592 #>  [9] 3.134992 5.252068 hist(rparetoi(1000, 10, 6), freq = FALSE, main = \"Histogram of the Sample\") rloglogis(10, 3, 6) #>  [1] 4.258138 2.767869 3.293448 2.365414 2.611447 2.980018 3.353399 2.632729 #>  [9] 2.479938 2.788551 hist(rloglogis(1000, 1, 8), freq = FALSE, main = \"Histogram of the Sample\")"},{"path":"https://wyaravms.github.io/genrs/reference/rburrxii.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a random sample from a Burr XII distribution — rburrxii","title":"Generates a random sample from a Burr XII distribution — rburrxii","text":"function designed generate random data following Burr XII distribution parameters shape1 shape2.","code":""},{"path":"https://wyaravms.github.io/genrs/reference/rburrxii.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a random sample from a Burr XII distribution — rburrxii","text":"","code":"rburrxii(n, shape1, shape2)"},{"path":"https://wyaravms.github.io/genrs/reference/rburrxii.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a random sample from a Burr XII distribution — rburrxii","text":"n number observations. shape1, shape2 shape parameters. Must strictly positive.","code":""},{"path":"https://wyaravms.github.io/genrs/reference/rburrxii.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a random sample from a Burr XII distribution — rburrxii","text":"vector containing data distributed according Burr XII distribution sample size specified n, shape parameters specified shape1 shape2.","code":""},{"path":"https://wyaravms.github.io/genrs/reference/rburrxii.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generates a random sample from a Burr XII distribution — rburrxii","text":"Burr XII distribution parameters shape1 = \\(\\gamma\\) shape2 = \\(\\alpha\\) probability density function: $$f_{X}(x) = \\alpha\\gamma\\dfrac{x^{\\alpha-1}}{(1+x^\\alpha)^{\\gamma+1}}$$ \\(x>0\\), \\(\\gamma>0\\) \\(\\alpha>0\\).","code":""},{"path":"https://wyaravms.github.io/genrs/reference/rburrxii.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a random sample from a Burr XII distribution — rburrxii","text":"","code":"rburrxii(10, 2, 3) #>  [1] 0.3503327 1.1336357 0.8352208 0.4469438 0.1549515 0.7172295 0.7435481 #>  [8] 0.5714268 0.9777956 1.0312370 rburrxii(100, 4, 16) #>   [1] 0.9762248 0.8284666 0.7436532 0.8667026 0.8833020 0.8350937 0.8835332 #>   [8] 0.7739713 0.8806745 1.0268868 0.8598933 0.9326820 0.9434765 0.8351815 #>  [15] 1.0328558 0.9447044 0.7633504 0.9064912 0.9359108 0.9345585 0.7392979 #>  [22] 0.8437575 0.8623861 0.9251186 0.8974418 0.8889186 0.9379050 1.0059720 #>  [29] 0.8302494 0.8413406 0.9330093 0.9009695 0.9260475 0.9293875 0.7951917 #>  [36] 0.9496010 0.9504525 1.0511440 1.0218584 0.8807681 0.8942318 0.8655835 #>  [43] 0.8283781 0.9067296 0.9000460 0.9524956 0.8376565 0.9392279 0.7751892 #>  [50] 0.8738072 0.9629460 0.8561150 0.9134489 0.8699754 0.9180301 0.8338119 #>  [57] 1.0055008 0.9086376 0.9090085 0.8572535 0.8915954 0.8772941 0.7342766 #>  [64] 0.8950995 0.8809329 0.7188155 0.8783763 0.9116811 0.9711886 0.8799160 #>  [71] 0.9060890 0.9187966 0.8530849 0.8599297 0.8976298 0.9920658 0.8829942 #>  [78] 0.8402785 0.9314720 0.7698254 1.0774309 0.8192418 0.9044462 0.9682368 #>  [85] 0.9401608 0.8479826 0.9094347 0.9653240 0.7341015 0.8957117 0.9583362 #>  [92] 0.9602793 0.8836044 0.8417730 0.8863411 0.9309444 0.9025258 0.9294011 #>  [99] 0.9032558 0.9655133"},{"path":"https://wyaravms.github.io/genrs/reference/rloglogis.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a random sample from a Log-logistic distribution — rloglogis","title":"Generates a random sample from a Log-logistic distribution — rloglogis","text":"function designed generate random data following Log-logistic distribution parameters scale shape.","code":""},{"path":"https://wyaravms.github.io/genrs/reference/rloglogis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a random sample from a Log-logistic distribution — rloglogis","text":"","code":"rloglogis(n, scale, shape)"},{"path":"https://wyaravms.github.io/genrs/reference/rloglogis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a random sample from a Log-logistic distribution — rloglogis","text":"n number observations. scale scale parameter. Must strictly positive. shape shape parameter. Must strictly positive.","code":""},{"path":"https://wyaravms.github.io/genrs/reference/rloglogis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a random sample from a Log-logistic distribution — rloglogis","text":"vector containing data distributed according Log-logistic distribution sample size specified n, scale shape parameters specified scale shape, respectively.","code":""},{"path":"https://wyaravms.github.io/genrs/reference/rloglogis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generates a random sample from a Log-logistic distribution — rloglogis","text":"Log-logistic distribution parameters scale = \\(\\alpha\\) shape = \\(\\beta\\) probability density function: $$f_{X}(x) = \\dfrac{(\\beta/\\alpha)(x/\\alpha)^{\\beta-1}}{(1 + (x/\\alpha)^{\\beta})^{2}}$$ \\(x\\geq 0\\), \\(\\theta>0\\) \\(\\alpha>0\\).","code":""},{"path":"https://wyaravms.github.io/genrs/reference/rloglogis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a random sample from a Log-logistic distribution — rloglogis","text":"","code":"rloglogis(10, 5, 2) #>  [1]  8.585635 10.614291  2.529501 14.336946 77.043781  3.525861  3.963860 #>  [8]  9.245616  2.681198  3.646639 rloglogis(100, 10, 6) #>   [1] 10.275305  9.304696 12.911647 13.205687  6.845540 10.649405 11.143473 #>   [8]  9.020311  9.823042 13.381961 10.087681 13.275447 10.961867  8.749679 #>  [15] 14.711354  9.432616 10.855580  9.984692 13.401484 10.475055 10.919677 #>  [22]  9.009890 11.780220  9.663815  9.486840 10.624214  9.404611  6.375124 #>  [29] 10.121270 11.760978 12.912255 13.156251 14.216024 11.040216 11.527289 #>  [36] 21.959055  8.320823  8.893109  7.901430 11.636283 13.103547 10.368636 #>  [43]  7.628689 16.058559  9.397914 11.732090 11.612540  7.021829  9.658999 #>  [50] 11.952008 10.442813  9.193891 10.599579  5.680930 13.692334  7.646407 #>  [57] 10.711779 10.274733 11.777399  9.475518 16.367134  6.127948  7.683984 #>  [64]  9.708746 12.625450  8.757598  9.419824  9.069583 10.722879 29.221435 #>  [71] 10.039039 12.530251  9.422469  9.742173  7.283109 11.022754  8.459696 #>  [78]  5.152079  9.805541 13.990037  9.991022 12.192405  9.476077 14.088924 #>  [85]  8.945105 14.760710 11.138174  7.102760 12.995031  9.428319  6.054813 #>  [92]  9.847387  9.822104 11.876155  9.917255  8.933785  9.826300 18.434204 #>  [99]  7.106300 13.386411"},{"path":"https://wyaravms.github.io/genrs/reference/rparetoi.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a random sample from a Pareto I distribution — rparetoi","title":"Generates a random sample from a Pareto I distribution — rparetoi","text":"function designed generate random data following Pareto distribution parameters scale shape.","code":""},{"path":"https://wyaravms.github.io/genrs/reference/rparetoi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a random sample from a Pareto I distribution — rparetoi","text":"","code":"rparetoi(n, scale, shape)"},{"path":"https://wyaravms.github.io/genrs/reference/rparetoi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a random sample from a Pareto I distribution — rparetoi","text":"n number observations. scale scale parameter. Must strictly positive. shape shape parameter. Must strictly positive.","code":""},{"path":"https://wyaravms.github.io/genrs/reference/rparetoi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a random sample from a Pareto I distribution — rparetoi","text":"vector containing data distributed according Pareto distribution sample size specified n, scale shape parameters specified scale shape, respectively.","code":""},{"path":"https://wyaravms.github.io/genrs/reference/rparetoi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generates a random sample from a Pareto I distribution — rparetoi","text":"Pareto distribution parameters scale = \\(\\theta\\) shape = \\(\\alpha\\) probability density function: $$f_{X}(x) = \\dfrac{\\alpha\\theta^{\\alpha}}{x^{\\alpha+1}}$$ \\(x\\geq \\theta\\), \\(\\theta>0\\) \\(\\alpha>0\\).","code":""},{"path":"https://wyaravms.github.io/genrs/reference/rparetoi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a random sample from a Pareto I distribution — rparetoi","text":"","code":"rparetoi(10, 5, 2) #>  [1]  5.644307  5.040495  5.356263  8.923779  8.355893  6.096376  6.388672 #>  [8]  9.245010  9.093245 18.337886 rparetoi(100, 10, 6) #>   [1] 11.07821 11.63041 10.30512 11.49662 14.63148 11.62331 13.45803 11.61824 #>   [9] 12.86051 10.88194 13.71708 12.53199 10.65811 10.19933 10.17922 13.07767 #>  [17] 10.82917 10.09064 20.49546 11.67032 10.27212 11.37659 10.22659 17.33762 #>  [25] 10.08044 10.29773 15.83155 18.00844 12.29331 14.34193 18.73501 10.05938 #>  [33] 11.01053 11.88102 24.05019 10.64999 13.81063 11.38309 14.11251 11.28402 #>  [41] 14.04028 13.82089 10.73253 10.00017 10.39015 16.22670 10.56604 14.25724 #>  [49] 17.18061 10.00671 11.43578 10.42110 11.89364 12.42108 14.09715 10.83510 #>  [57] 14.50767 13.62759 12.43680 10.06550 10.70044 12.59311 15.02721 10.38830 #>  [65] 11.12229 10.84449 10.86690 10.41910 10.01207 10.78262 11.32539 13.63186 #>  [73] 10.24661 10.81907 10.52250 11.21661 10.03292 10.15320 25.06018 16.07905 #>  [81] 10.22383 10.20606 10.79105 11.11978 12.91166 11.18907 10.18083 16.14137 #>  [89] 12.26431 11.23311 11.34071 10.51093 12.30380 17.79080 11.97613 13.03619 #>  [97] 10.12752 14.33470 13.39267 12.40640"}]
